나동빈 저자의 책을 공부 하면서, 중요하다고 생각하는 
부분에 대해 적어봅니다.

========================================

- 복잡도(Complexity)는 알고리즘의 성능을 나타내는 척도

- 알고리즘 문제를 풀 때 단순히 '복잡도'라고 하면 보통은 '시간 복잡도'를 의마한다.

- 알고리즘 문제 풀이에 능숙한 숙련자들은 문제를 해석하기전에
[조건]을 먼저 보기도 한다.

[문제의 조건] 부터 확인하면 문제를 풀기 위해 얼마나 효율적인
알고리즘을 작성해야 하는지 눈치 챌수 있기 때문이다.

N의 범위가 500인 경우: 시간 복잡도가 O(N^3)인 알고리즘을 설계하면 문제를 풀수 있다.

N의 범위가 100,000인 경우: 시간 복잡도가 O(NlogN)인 알고리즘을 설계하면 문제를 풀 수 있다.


>>>그럼, 알고리즘 문제 지문을 읽고, 복잡도를 지문을 통해 정보를 얻고, 거기에 맞는 알고리즘을 머릿속에서 그려보고,  채택하여 문제를 푼다. 





